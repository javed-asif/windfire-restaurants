apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: windfire-restaurants-node-git
spec:
  type: git
  params:
    - name: url
      value: https://github.com/robipozzi/windfire-restaurants-node
    - name: revision
      value: master
---
apiVersion: tekton.dev/v1alpha1
kind: PipelineResource
metadata:
  name: windfire-restaurants-node-image
spec:
  type: image
  params:
    - name: url
      #configure: replace with where the image should go: perhaps your local registry or Dockerhub with a secret and configured service account
      #value: image-registry.openshift-image-registry.svc:5000/windfire/windfire-restaurants-node:1.0
      value: quay.io/robipozzi/windfire-restaurants-node:1.0
---
apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: windfire-restaurants-backend-s2i
spec:
  workspaces: 
    - name: workspace
  params:
    - name: APP_NAME
      type: string
      description: name of the application to deploy
      default: windfire-restaurants-backend
    - name: GIT_REPO
      type: string
      description: url of the git repo for the code of deployment
      default: https://github.com/robipozzi/windfire-restaurants-node
    - name: GIT_REVISION
      type: string
      description: revision to be used from repo of the code for deployment
      default: master
    - name: IMAGE
      type: string
      description: image to be built from the code
      default: quay.io/robipozzi/windfire-restaurants-node:1.0
    - name: PATH_CONTEXT
      type: string
      description: path where source code for the application is available
      default: app
    - name: MAJOR_VERSION
      type: string
      default: "12"
  resources:
    - name: git-source
      type: git
    - name: image
      type: image
  tasks:
    - name: fetch-repository
      taskRef:
        name: git-clone
        kind: ClusterTask
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
        - name: subdirectory
          value: ""
        - name: deleteExisting
          value: "true"
      workspaces:
        - name: output
          workspace: workspace
    - name: build
      taskRef:
        name: s2i-nodejs
        kind: ClusterTask
      runAfter:
        - fetch-repository
      params:
        - name: TLSVERIFY
          value: "false"
        - name: PATH_CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: IMAGE
          value: $(params.IMAGE)
      workspaces:
        - name: source
          workspace: workspace